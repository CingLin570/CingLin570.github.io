<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CingLin Blog</title>
  
  
  <link href="http://cinglin570.github.io.com/atom.xml" rel="self"/>
  
  <link href="http://cinglin570.github.io.com/"/>
  <updated>2021-03-01T12:19:18.298Z</updated>
  <id>http://cinglin570.github.io.com/</id>
  
  <author>
    <name>CingLin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gulp安裝流程</title>
    <link href="http://cinglin570.github.io.com/2021/02/28/gulp%E5%AE%89%E8%A3%9D%E6%B5%81%E7%A8%8B/"/>
    <id>http://cinglin570.github.io.com/2021/02/28/gulp%E5%AE%89%E8%A3%9D%E6%B5%81%E7%A8%8B/</id>
    <published>2021-02-28T10:03:35.000Z</published>
    <updated>2021-03-01T12:19:18.298Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gulp-環境安裝流程"><a href="#gulp-環境安裝流程" class="headerlink" title="gulp 環境安裝流程"></a>gulp 環境安裝流程</h1><h2 id="影片教學-請不會使用-gulp-的新手，直接看這部"><a href="#影片教學-請不會使用-gulp-的新手，直接看這部" class="headerlink" title="影片教學(請不會使用 gulp 的新手，直接看這部)"></a>影片教學(請不會使用 gulp 的新手，直接看這部)</h2><a id="more"></a><div class="video-container"><iframe src="https://www.youtube.com/embed/mZnMsYVHUkA" frameborder="0" loading="lazy" allowfullscreen></iframe></div><h3 id="步驟一：安裝-Node-js，請打開終端機或命令提示字元，輸入-node-v-後按-Enter，看是否有顯示版本號"><a href="#步驟一：安裝-Node-js，請打開終端機或命令提示字元，輸入-node-v-後按-Enter，看是否有顯示版本號" class="headerlink" title="步驟一：安裝 Node.js，請打開終端機或命令提示字元，輸入 node -v 後按 Enter，看是否有顯示版本號"></a>步驟一：安裝 <a href="https://nodejs.org/en/">Node.js</a>，請打開終端機或命令提示字元，輸入 <code>node -v</code> 後按 Enter，看是否有顯示版本號</h3><p><img src="https://i.imgur.com/tMn6b6n.gif"></p><p>PS1：Mac 請按 command+空白鍵，輸入「terminal」打開終端機<br>PS2：Win 請按 開始 &gt; 執行 &gt; 輸入「cmd」打開命令提示字元<br>Win10 執行視窗快速鍵為 win + R:<br><img src="https://i.imgur.com/xM3UOZG.jpg"></p><p><img src="https://i.imgur.com/fEKbeaR.png"></p><p>在版本號較新的 Win10 也可在左下搜尋欄輸入 cmd 打開命令提示字元:<br><img src="https://i.imgur.com/UsXljox.jpg"></p><h3 id="步驟二：在終端機安裝-gulp，繼續輸入指令-npm-i-gulp-4-g-按-Enter-安裝，輸入-gulp-v-查詢是否有回報版本號。"><a href="#步驟二：在終端機安裝-gulp，繼續輸入指令-npm-i-gulp-4-g-按-Enter-安裝，輸入-gulp-v-查詢是否有回報版本號。" class="headerlink" title="步驟二：在終端機安裝 gulp，繼續輸入指令 npm i gulp@4 -g 按 Enter 安裝，輸入 gulp -v 查詢是否有回報版本號。"></a>步驟二：在終端機安裝 gulp，繼續輸入指令 <code>npm i gulp@4 -g</code> 按 Enter 安裝，輸入 <code>gulp -v</code> 查詢是否有回報版本號。</h3><h3 id="步驟三：下載此資料夾，並解壓縮"><a href="#步驟三：下載此資料夾，並解壓縮" class="headerlink" title="步驟三：下載此資料夾，並解壓縮"></a>步驟三：下載此<a href="https://github.com/hexschool/web-layout-training-gulp">資料夾</a>，並解壓縮</h3><p><img src="https://i.imgur.com/OYjJLXH.jpg"></p><h3 id="步驟四：移動到該資料夾，cd-移動到該資料夾，如果移動成功，win-輸入指令dir、Mac-輸入指令-ls，可以觀看該資料裡的檔案列表，如下-Win-截圖。"><a href="#步驟四：移動到該資料夾，cd-移動到該資料夾，如果移動成功，win-輸入指令dir、Mac-輸入指令-ls，可以觀看該資料裡的檔案列表，如下-Win-截圖。" class="headerlink" title="步驟四：移動到該資料夾，cd 移動到該資料夾，如果移動成功，win 輸入指令dir、Mac 輸入指令 ls，可以觀看該資料裡的檔案列表，如下 Win 截圖。"></a>步驟四：移動到該資料夾，cd 移動到該資料夾，如果移動成功，win 輸入指令<code>dir</code>、Mac 輸入指令 <code>ls</code>，可以觀看該資料裡的檔案列表，如下 Win 截圖。</h3><p><img src="https://i.imgur.com/Xl4ShdL.png"></p><h3 id="步驟五：輸入指令-npm-install-安裝插件"><a href="#步驟五：輸入指令-npm-install-安裝插件" class="headerlink" title="步驟五：輸入指令 npm install 安裝插件"></a>步驟五：輸入指令 <code>npm install</code> 安裝插件</h3><h3 id="步驟六：輸入指令-gulp-執行"><a href="#步驟六：輸入指令-gulp-執行" class="headerlink" title="步驟六：輸入指令 gulp 執行"></a>步驟六：輸入指令 <code>gulp </code>執行</h3><h3 id="步驟七：若步驟六執行成功，會打開瀏覽器，看到下方畫面，就代表你全部都成功了！"><a href="#步驟七：若步驟六執行成功，會打開瀏覽器，看到下方畫面，就代表你全部都成功了！" class="headerlink" title="步驟七：若步驟六執行成功，會打開瀏覽器，看到下方畫面，就代表你全部都成功了！"></a>步驟七：若步驟六執行成功，會打開瀏覽器，看到下方畫面，就代表你全部都成功了！</h3><p><img src="https://i.imgur.com/QvvDPZS.png"></p><h2 id="步驟八：如果你都做完了，要將網頁部署到-GitHub-Pages-，請上傳-dist-資料夾，流程請觀看影片，從-40-秒開始觀看留意相關細節，"><a href="#步驟八：如果你都做完了，要將網頁部署到-GitHub-Pages-，請上傳-dist-資料夾，流程請觀看影片，從-40-秒開始觀看留意相關細節，" class="headerlink" title="步驟八：如果你都做完了，要將網頁部署到 GitHub Pages ，請上傳 dist 資料夾，流程請觀看影片，從 40 秒開始觀看留意相關細節，"></a>步驟八：如果你都做完了，要將網頁部署到 GitHub Pages ，請上傳 dist 資料夾，流程請觀看<a href="https://www.youtube.com/watch?v=pa4Ydm7WT9k&feature=youtu.be">影片，從 40 秒開始觀看</a>留意相關細節，</h2><h2 id="QA"><a href="#QA" class="headerlink" title="QA"></a>QA</h2><h3 id="步驟一-常見問答"><a href="#步驟一-常見問答" class="headerlink" title="步驟一 常見問答"></a>步驟一 常見問答</h3><p>Q：windows 安裝 node.js 以後，輸入 node -v 沒顯示版本號怎麼辦？？<br>A：請重新開機再嘗試</p><p>Q：Windows 的命令提示字元怎麼快速開啟？<br>A：請到 開始 &gt; 執行 &gt; 輸入 <code>cmd</code> 就可直接開啟</p><h3 id="步驟二-常見問答"><a href="#步驟二-常見問答" class="headerlink" title="步驟二 常見問答"></a>步驟二 常見問答</h3><p>Q：我是 Mac，安裝沒有成功怎麼辦？<br>A：指令請換成 <code>sudo npm i gulp@4 -g</code></p><p><img src="https://i.imgur.com/GJOw1fE.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;gulp-環境安裝流程&quot;&gt;&lt;a href=&quot;#gulp-環境安裝流程&quot; class=&quot;headerlink&quot; title=&quot;gulp 環境安裝流程&quot;&gt;&lt;/a&gt;gulp 環境安裝流程&lt;/h1&gt;&lt;h2 id=&quot;影片教學-請不會使用-gulp-的新手，直接看這部&quot;&gt;&lt;a href=&quot;#影片教學-請不會使用-gulp-的新手，直接看這部&quot; class=&quot;headerlink&quot; title=&quot;影片教學(請不會使用 gulp 的新手，直接看這部)&quot;&gt;&lt;/a&gt;影片教學(請不會使用 gulp 的新手，直接看這部)&lt;/h2&gt;</summary>
    
    
    
    <category term="gulp" scheme="http://cinglin570.github.io.com/categories/gulp/"/>
    
    
    <category term="gulp" scheme="http://cinglin570.github.io.com/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Pages 教學手冊</title>
    <link href="http://cinglin570.github.io.com/2021/02/24/githubpage/"/>
    <id>http://cinglin570.github.io.com/2021/02/24/githubpage/</id>
    <published>2021-02-24T09:44:57.000Z</published>
    <updated>2021-03-01T12:23:31.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="從-0-到-1-的-GitHub-Pages-教學手冊"><a href="#從-0-到-1-的-GitHub-Pages-教學手冊" class="headerlink" title="從 0 到 1 的 GitHub Pages 教學手冊"></a>從 0 到 1 的 GitHub Pages 教學手冊</h1><h2 id="影片教學"><a href="#影片教學" class="headerlink" title="影片教學"></a>影片教學</h2><p>Windows：<a href="https://youtu.be/PldKaxOkN1o">https://youtu.be/PldKaxOkN1o</a><br>Mac：<a href="https://youtu.be/DjgsqLLJrxM">https://youtu.be/DjgsqLLJrxM</a></p><a id="more"></a><h2 id="開始前注意事項"><a href="#開始前注意事項" class="headerlink" title="開始前注意事項"></a>開始前注意事項</h2><ul><li>本次教學使用 GitHub Desktop 應用程式操作</li><li>著重於不需要了解 <strong>Git指令</strong> 與 <strong>Git觀念知識</strong></li><li>Windows 作業系統必須是 64bit</li><li>提交作業的話，請打開 GitHub Pages 的功能，就可以在網路上看到你的畫面哦</li></ul><blockquote><p><a href="https://support.microsoft.com/zh-tw/help/15056/windows-32-64-bit-faq">32 位元與 64 位元 Windows： 常見問題集</a></p></blockquote><blockquote><p><a href="https://desktop.github.com/">GitHub Desktop 下載連結</a><br>請依作業系統 Download<br>教學操作版本號為 2.4.0 不同版本介面可能有所不同</p></blockquote><p><img src="https://i.imgur.com/iXLtTjA.png"></p><h2 id="閱讀指南"><a href="#閱讀指南" class="headerlink" title="閱讀指南"></a>閱讀指南</h2><ul><li>我們會模擬開發的狀況，來介紹如何 <strong>初次上傳</strong> 與 <strong>修改後上傳</strong></li><li>閱讀本教學手冊時，可以透過畫面右側的文章導覽到達指定標題</li><li>若對於以下操作想要深入了解的話，建議上是先學習 <strong>Git是什麼</strong></li></ul><h2 id="GitHub-註冊"><a href="#GitHub-註冊" class="headerlink" title="GitHub 註冊"></a>GitHub 註冊</h2><blockquote><p>複製以下的連結，前往 GitHub 官網<br><a href="https://github.com/">https://github.com/</a></p></blockquote><ul><li>依下圖所示填寫你的資料，點擊 <strong><code>Sign up for GitHub</code></strong></li></ul><p><img src="https://i.imgur.com/utGgXBw.png"></p><ul><li>接著會有 <strong>機器人驗證</strong> 與 <strong>Email 郵件推播資訊勾選框</strong></li></ul><p><img src="https://i.imgur.com/GItHLNO.png"></p><ul><li>接著會有選擇 GitHub 帳號的相關資訊</li><li>請選擇 Individual (<strong>個人</strong>) 與 Free</li></ul><p><img src="https://i.imgur.com/d63IPiF.png"></p><ul><li>接著就歡迎使用 GitHub 並且要你填寫來源資訊，這個可以按 <strong><code>Skip this step</code></strong></li></ul><p><img src="https://i.imgur.com/1GPNoDW.png"></p><ul><li>恭喜到這邊後，就可以去驗證電子郵件</li><li>驗證後就已經完成註冊</li></ul><p><img src="https://i.imgur.com/42X7R5a.png"></p><h2 id="初次上傳"><a href="#初次上傳" class="headerlink" title="初次上傳"></a>初次上傳</h2><h3 id="專案程式碼"><a href="#專案程式碼" class="headerlink" title="專案程式碼"></a>專案程式碼</h3><ul><li>請於習慣路徑建立專案資料夾</li><li>接著我們照著下圖的方式，模擬專案已完成</li></ul><p><img src="https://i.imgur.com/uQJUuKH.png"></p><h3 id="GitHub-Desktop-設定"><a href="#GitHub-Desktop-設定" class="headerlink" title="GitHub Desktop 設定"></a>GitHub Desktop 設定</h3><ul><li>打開一開始就下載的 GitHub Desktop 執行檔</li><li>一開始建議先去設定以下兩點<ul><li>GitHub 帳號綁定</li><li>Git 使用者與信箱 (<strong>不設定的話，等等上傳會叫你設定</strong>)</li></ul></li><li>跟著下方的圖示點開 <code>Options</code></li></ul><p><img src="https://i.imgur.com/M98XuXp.png"></p><ul><li>登入 GitHub 帳號</li></ul><p><img src="https://i.imgur.com/eo6F4gQ.png"></p><ul><li>切換到 Git 填寫 Name 與 Email</li></ul><p><img src="https://i.imgur.com/T5OeeEU.png"></p><blockquote><p>Name 與 Email 是指我們每一次專案版本修改並提交紀錄的使用者</p><p><img src="https://i.imgur.com/op5rIw8.png"></p></blockquote><h3 id="建立-Repository"><a href="#建立-Repository" class="headerlink" title="建立 Repository"></a>建立 Repository</h3><blockquote><p>Repository 的翻譯是儲存庫<br>意思是會把專案資料夾的檔案複製一份加到 Repository 裡面</p></blockquote><p>從下圖會看到左邊有4個選項</p><ol><li>建立操作教程的儲存庫</li><li>從網路上的儲存庫複製一份到本機上</li><li>建立一個新的儲存庫到本機上</li><li>從本機上加入已存在的儲存庫</li></ol><blockquote><p>注意:warning:<br>我們要選擇 <code>選項4</code> 因為我們已經有專案，只是還沒有儲存庫<br><code>選項3</code> 是創建一個 <strong>空的專案資料夾</strong> 與 <strong>內建儲存庫</strong></p></blockquote><p><img src="https://i.imgur.com/rdZaJhS.png"></p><ul><li>接著依下圖操作</li></ul><p><img src="https://i.imgur.com/dMy3lU9.png"></p><ul><li>若沒意外的話，會跳出下圖警告，意思是檔案內沒有儲存庫</li><li>此時點選 <strong><code>create a repository</code></strong> 建立儲存庫</li></ul><p><img src="https://i.imgur.com/ZE0PpIy.png"></p><ul><li>接著會看到以下圖示</li><li>特別注意的是 Local path 已經綁定資料夾，你不能 Choose 它</li><li>建立儲存庫的各選項資訊為<ul><li>Name (儲存庫名稱)</li><li>Description (儲存庫的描述 e.g 第一週作業)</li><li>lnitialize this..(儲存庫初始化階段，建立 README 檔案)</li><li>Gitignore (需要被儲存庫忽略的檔案)</li><li>License (授權宣告，意思是別人取用檔案的話自身權益的保障)</li></ul></li></ul><blockquote><p>以上選項可以只填寫 <strong>Name</strong> 就好哩，接著按下 <strong>Create Repository</strong></p></blockquote><p><img src="https://i.imgur.com/ad0coOP.png"></p><ul><li>接著請看下圖的紅框 LiveCourse 就是已建立的 <strong>repository</strong></li><li>下方有 <strong>Changes</strong> 與 <strong>History</strong></li></ul><p><img src="https://i.imgur.com/r5gHHnP.png"></p><ul><li>接著我們切換 <code>History</code> 會看到以下的初始化檔案紀錄</li></ul><blockquote><p>:warning: 此時專案資料夾內會有 .git 與 .gitattributes</p><ul><li>.git 是隱藏資料夾 (這個代表著你的儲存庫)</li><li>.gitattributes 這個是 Git 斷行字元處理 (請不要理它)</li></ul></blockquote><p><img src="https://i.imgur.com/3Wrpy4o.png"></p><blockquote><p>到這邊就完成了建立 Repository 的流程:beers:</p></blockquote><h3 id="推上-GitHub-伺服器"><a href="#推上-GitHub-伺服器" class="headerlink" title="推上 GitHub 伺服器"></a>推上 GitHub 伺服器</h3><ul><li>我們接續上一個步驟的 <strong>History</strong></li><li>你會發現程式碼已經被儲存庫完整紀錄下來</li><li>這個時候選單切換為 <strong>Changes</strong></li><li>點選下圖的紅框 <strong>發佈儲存庫</strong> (推上 GitHub 伺服器)</li></ul><blockquote><p>這邊就不特別 Google翻譯…請自行查詢藍框內的英文</p></blockquote><p><img src="https://i.imgur.com/JRuEk5D.png"></p><ul><li>接著彈出的視窗，要畫重點注意</li><li>選項上我們不是企業，是屬於個人要選擇 <strong><code>GitHub.com</code></strong></li><li>Name 這個會自動帶入儲存庫名稱</li><li>Description 描述可空白</li><li>Keep this code private <strong>這個重要了！請取消勾選</strong></li></ul><blockquote><p>:warning: 決定了發佈 GitHub 伺服器的儲存庫是否公開</p><ul><li>取消勾選 = 公開</li><li>已勾選 = 私密</li></ul><p>如果是勾選狀態傳給助教或老師批改就會出現 GitHub 404 頁面<br>這個時候筆者就把你釘在牆上，我在講你有沒有在看，沒有嘛！！</p></blockquote><ul><li>接著就放心地按下按鈕</li></ul><p><img src="https://i.imgur.com/rxEk02d.png"></p><ul><li>接著開啟 GitHub 並且登入帳號</li><li>按照下圖可以點擊 Your repository 或者畫面左側的儲存庫名稱</li><li>特別注意的是此畫面是已經上傳的儲存庫為私密狀態</li><li>若你的已經是公開，可以大概看一下儲存庫 <strong>Settings</strong> 按鈕在哪</li><li>接著會教如何改回公開，即可避免被筆者釘到牆上</li></ul><p><img src="https://i.imgur.com/Hy5yJW7.png"></p><ul><li>當你發現點進去儲存庫後是 Private 的話</li><li>請點擊 <strong>Settings</strong></li></ul><p><img src="https://i.imgur.com/p5lbCr8.png"></p><ul><li>當切到 Settings畫面後，頁面滾到最下方找到 Danger Zone</li><li>點擊 Make pubilc</li></ul><p><img src="https://i.imgur.com/r8kXCMb.png"></p><ul><li>輸入紅框內的文字</li><li>就可以點擊按鈕切換成公開</li><li>此時切回專案資料夾的畫面 Private 就會消失，就不放圖囉</li></ul><p><img src="https://i.imgur.com/ncrCMQT.png"></p><h3 id="GitHub-Pages-設置"><a href="#GitHub-Pages-設置" class="headerlink" title="GitHub Pages 設置"></a>GitHub Pages 設置</h3><ul><li>接著透過 GitHub 建立靜態網站稱為 GitHub Pages</li><li>我們在 Settings 頁面找尋 GitHub Pages 標題如下圖所示</li><li>找到後點擊 <strong>下拉式按鈕</strong> 選擇 master branch</li></ul><p><img src="https://i.imgur.com/PITpqrt.png"></p><ul><li>接著會畫面會閃一下重整頁面</li><li>回到 GitHub Pages 標題，就會發現如下圖所示</li><li>可以看到下圖的藍框有一串網址，這個就是你的靜態網站網址</li></ul><blockquote><p>生成靜態網站的速度，依專案大小而定通常不超過3小時</p></blockquote><p><img src="https://i.imgur.com/38pNo28.png"></p><p>截止於此，你的專案可以傳給助教或老師檢閱囉<br>接下來是當建立儲存庫專案已被追蹤，修改後的操作</p><h2 id="修改後上傳"><a href="#修改後上傳" class="headerlink" title="修改後上傳"></a>修改後上傳</h2><h3 id="專案程式碼-1"><a href="#專案程式碼-1" class="headerlink" title="專案程式碼"></a>專案程式碼</h3><ul><li>接著我們模擬一下程式碼修改</li></ul><p><img src="https://i.imgur.com/bIsYRwV.png"></p><h3 id="GitHub-Desktop-操作"><a href="#GitHub-Desktop-操作" class="headerlink" title="GitHub Desktop 操作"></a>GitHub Desktop 操作</h3><ul><li>程式碼儲存後，回到 <strong>GitHub Desktop</strong></li><li>就會發現 Changes 後面多了 <code>(1)</code> 這代表1個檔案被修改過</li><li>從下圖來看可以發現修改的程式碼，完整顯示於畫面上</li><li>這時候來到左下方紅框 - 意思提交檔案紀錄的選項</li></ul><p><img src="https://i.imgur.com/QQPFfco.png"></p><ul><li>依下圖所示會看到 “被助教釘在牆上修改版本_v1”</li><li>這個意思是本次提交檔案紀錄的標題</li><li>至於 Description 就是這次提交紀錄的描述</li></ul><blockquote><p>標題通常會寫 <strong>修改程式碼的主要操作</strong> e.g. 修改 Footer 外距誤差值<br>描述可以不寫，但是若覺得程式碼修改比較複雜，可以有善利用描述</p></blockquote><ul><li>接著就是點擊 <strong><code>Commit to master</code></strong></li></ul><p><img src="https://i.imgur.com/My8lNLK.png"></p><ul><li>接著切換到 <strong>History</strong> 就會發現多一筆紀錄是 <strong>被助教釘在牆上修改版本_v1</strong></li></ul><p><img src="https://i.imgur.com/WrhuleX.png"></p><ul><li>這個時候，就已經修改好本機的儲存庫</li><li>接下來要上傳 GitHub 伺服器囉</li><li>請切換回 <strong>Changes</strong></li><li>點擊 <strong>Push origin</strong> 後會跑一下等到按鈕消失即可</li></ul><p><img src="https://i.imgur.com/X70kS8b.png"></p><ul><li>接著回到 GitHub 儲存庫</li><li>依下圖所示，會發現 <strong>commits</strong> 這個提交紀錄是 2 次</li><li>index.html 後面的版本紀錄最新的是 <strong>被助教釘在牆上修改版本_v1</strong></li></ul><p><img src="https://i.imgur.com/UM2GOnv.png"></p><ul><li>接著打開靜態網站網址，畫面上會同步更新</li></ul><blockquote><p>如果沒有的話，要稍微等一下重新整理</p></blockquote><p>截止於此，修改後上傳已經完成囉:beers:</p><h2 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h2><h3 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h3><p>當你建立好儲存庫，你的專案資料夾內有 <code>.git</code><br>重新打開後 VS Code 會跳出以下的警示，找不到 Git 應用程式</p><p><img src="https://i.imgur.com/nMLC9p6.png"></p><p>這是因為 GitHub Desktop 是採內建 Git 應用程式</p><p>解決方案：<br>點擊連結去官方下載 Git 應用程式，全域安裝在你的系統內</p><blockquote><p><a href="https://git-scm.com/">https://git-scm.com/</a></p></blockquote><h3 id="GitHub-Pages-404"><a href="#GitHub-Pages-404" class="headerlink" title="GitHub Pages 404"></a>GitHub Pages 404</h3><ul><li>如果你的 GitHub Pages 出現以下問題</li></ul><p><img src="https://i.imgur.com/p9VPvqx.png"></p><ul><li>如果資料夾結構是類似於以下的圖示</li></ul><p><img src="https://i.imgur.com/g93adzd.png"></p><p>這樣 GitHub Pages 會抓不到 <strong>index.html</strong><br>你必須手動更改網址讓它指向 <strong>index.html</strong></p><p>範例如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;username.github.io&#x2F;儲存庫名稱&#x2F;work1&#x2F;index.html&#x2F;</span><br></pre></td></tr></table></figure><ul><li>如果資料夾結構是類似於以下的圖示</li></ul><p><img src="https://i.imgur.com/HJrXrLj.png"></p><ul><li>但是以下的網址還是 404</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;username.github.io&#x2F;儲存庫名稱&#x2F;</span><br></pre></td></tr></table></figure><ul><li>請試著手動輸入 index.html 讓它指向 index.html 檔案</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;username.github.io&#x2F;儲存庫名稱&#x2F;index.html</span><br></pre></td></tr></table></figure><ul><li>或者你的資料結構 html 檔名，不是 index 的話，請改寫為你的檔名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;username.github.io&#x2F;儲存庫名稱&#x2F;檔名.html</span><br></pre></td></tr></table></figure><h3 id="忽略檔案"><a href="#忽略檔案" class="headerlink" title="忽略檔案"></a>忽略檔案</h3><ul><li>假設你想加入一些範例在資料夾內，但是又不想把它加入到儲存庫，可以參考以下的圖示。</li><li>本次圖示是以新增 example 資料夾為例</li></ul><p><img src="https://i.imgur.com/g6sH0hd.gif"></p><blockquote><p>推薦 VScode 套件，可以針對檔案右鍵加入忽略 - <a href="https://marketplace.visualstudio.com/items?itemName=michelemelluso.gitignore">連結</a></p></blockquote><h3 id="深入研究-Git"><a href="#深入研究-Git" class="headerlink" title="深入研究 Git"></a>深入研究 Git</h3><blockquote><p>這裡是提供給讀者，學習 Git 的資源參考</p></blockquote><ul><li><a href="https://w3c.hexschool.com/git/cfdbd310">Git &amp; GitHub 教學手冊 - 六角學院</a></li><li><a href="https://gitbook.tw/">為你自己學 Git - 作者高見龍</a></li><li><a href="https://github.com/doggy8088/Learn-Git-in-30-days/blob/master/zh-tw/README.md">30 天精通 Git 版本控管 - 作者黃保翕 ( Will 保哥 )</a></li><li><a href="https://git-scm.com/book/zh-tw/v2">Git 官方中文教學</a></li><li><a href="https://backlog.com/git-tutorial/tw/">連猴子都能懂的 Git 入門指南</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;從-0-到-1-的-GitHub-Pages-教學手冊&quot;&gt;&lt;a href=&quot;#從-0-到-1-的-GitHub-Pages-教學手冊&quot; class=&quot;headerlink&quot; title=&quot;從 0 到 1 的 GitHub Pages 教學手冊&quot;&gt;&lt;/a&gt;從 0 到 1 的 GitHub Pages 教學手冊&lt;/h1&gt;&lt;h2 id=&quot;影片教學&quot;&gt;&lt;a href=&quot;#影片教學&quot; class=&quot;headerlink&quot; title=&quot;影片教學&quot;&gt;&lt;/a&gt;影片教學&lt;/h2&gt;&lt;p&gt;Windows：&lt;a href=&quot;https://youtu.be/PldKaxOkN1o&quot;&gt;https://youtu.be/PldKaxOkN1o&lt;/a&gt;&lt;br&gt;Mac：&lt;a href=&quot;https://youtu.be/DjgsqLLJrxM&quot;&gt;https://youtu.be/DjgsqLLJrxM&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="github" scheme="http://cinglin570.github.io.com/categories/github/"/>
    
    
    <category term="github" scheme="http://cinglin570.github.io.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>第一週 1 px 也不差的版型控制術</title>
    <link href="http://cinglin570.github.io.com/2021/02/14/%E5%85%AD%E8%A7%92%E5%AD%B8%E9%99%A2%E5%88%87%E7%89%88%E7%9B%B4%E6%92%AD%E7%8F%AD%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    <id>http://cinglin570.github.io.com/2021/02/14/%E5%85%AD%E8%A7%92%E5%AD%B8%E9%99%A2%E5%88%87%E7%89%88%E7%9B%B4%E6%92%AD%E7%8F%AD%E7%AC%AC%E4%B8%80%E5%91%A8/</id>
    <published>2021-02-14T09:58:57.000Z</published>
    <updated>2021-02-15T13:46:07.595Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在2020年的1月入伍，在入伍的期間也開始為自己的未來做打算，在之前也是上六角學院的課程，<br>也陸續買了很多相關課程，因為也不知道什麼時候進去蹲，自己的計畫一直沒有實現，在某一天晚<br>上手機看到通知點進去看，看到了這個之後~</p><p><img src="https://i.imgur.com/DYJUGFA.png"></p><a id="more"></a><p>休假回去立馬下單，自己也稍微思考了一下，八周的課程，我每周回去還有時間上課，而且距離退伍也<br>快了，自己也趁這個機會好好訓練自己一波。</p><h1 id="第一週-1-px-也不差的版型控制術"><a href="#第一週-1-px-也不差的版型控制術" class="headerlink" title="第一週 1 px 也不差的版型控制術"></a>第一週 1 px 也不差的版型控制術</h1><p>為什麼叫做 1 px 也不差的版型控制術呢，簡單來說就是透過這堂課程了解網頁的結構，包括圖片產生的<br>微小差距，讓爾後在切版的時候更注意這些細節~~</p><p><img src="https://i.imgur.com/7Nqt0Tq.png"></p><h1 id="建立環境"><a href="#建立環境" class="headerlink" title="建立環境"></a>建立環境</h1><p>在這裡課程有推薦一個非常好用的東西，叫做 Emmet，我們透過它可以節省很多切版網頁的時間</p><blockquote><p><a href="https://docs.emmet.io/cheat-sheet/">emmet 指令大全</a></p></blockquote><p>再來我們要介紹的是網頁結構，網頁可以切分為容器與元素，然後元素又分為區塊元素及行內元素</p><p>究竟甚麼是區塊元素及行內元素呢?</p><blockquote><p>CSS規範規定，每个元素都有display屬性，每個元素都有默認的display值，如div的display默認值为&gt; “block”，則為“區塊”元素；span默認display屬性值为“inline”，是“行内”元素。</p></blockquote><h2 id="區塊元素"><a href="#區塊元素" class="headerlink" title="區塊元素"></a>區塊元素</h2><p>1.區塊(block)元素會另起一行<br>2.會盡可能撐滿父元素<br>3.可以設定寬高</p><p><img src="https://i.imgur.com/Kn7FCak.png"></p><p>區塊元素常見包括:<br>div、p、h1~h6、<br>ul、ol、li、<br>dl、dt、dd、<br>form、table、hr、<br>blockquote 、<br>address、menu、pre…..等等</p><h2 id="行內元素"><a href="#行內元素" class="headerlink" title="行內元素"></a>行內元素</h2><p>1.和其他元素都在一行上，相臨的行内元素会排列在同一行，<br> 直到一行排不下，才會換行，其寬度隨元素的内容而變化。<br>2.設置寬高無效，只能由内容撑起来，即行内元素設置width，height屬性無效。<br>3.設置上下margin、padding无效，左右padding 、margin有效<br>4.水平方向的padding-left 、padding-right、margin-left、margin-right都<br> 會產生效果，但上下方向的padding-top、padding-bottom、margin-top 、<br> margin-bottom不會產生邊距效果。</p><p><img src="https://i.imgur.com/zmwS4qn.png"></p><p>行內元素常見包括:<br>span、em、i、b、strong、a、img、input、br、select、textarea、q、bdo、sub、sup…等等</p><h2 id="display-inline-block"><a href="#display-inline-block" class="headerlink" title="display:inline-block"></a>display:inline-block</h2><p>在這邊也介紹 <strong>display:inline-block</strong></p><p>以inline的方式呈現，但同時擁有block的屬性<br>可設定元素的寬高/margin/padding<br>可水平排列</p><p><img src="https://i.imgur.com/1fKGswX.png"></p><p>可以發現設定display:inline-block 後，即可同時擁有block可設定寬高的屬性，但其排版仍像inline屬性，並不會向右占滿整個容器。</p><p>以上範例圖，都可以在以下codepen試試看哦</p><iframe height="265" style="width: 100%;" scrolling="no" title="區塊元素與行內元素" src="https://codepen.io/pvzfeusk/embed/dyOvNjp?height=265&theme-id=dark&default-tab=html,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/pvzfeusk/pen/dyOvNjp'>區塊元素與行內元素</a> by 胡謦麟  (<a href='https://codepen.io/pvzfeusk'>@pvzfeusk</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><h1 id="CSS-Reset"><a href="#CSS-Reset" class="headerlink" title="CSS Reset"></a>CSS Reset</h1><p>當剛開始撰寫網頁的時候，會發現自己的網頁有些許的跑版，其實那是網頁的預設樣式，這時候就會需要<br>CSS Reset 來清楚網頁預設樣式，CSS Reset又有分好幾種，比較常見的就是 CSS Reset 與 CSS normalize。</p><p><img src="https://i.imgur.com/YVcM2xy.png"></p><h2 id="CSS-Reset-1"><a href="#CSS-Reset-1" class="headerlink" title="CSS Reset"></a>CSS Reset</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">span</span>, <span class="selector-tag">applet</span>, <span class="selector-tag">object</span>, <span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, <span class="selector-tag">pre</span>,</span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">abbr</span>, <span class="selector-tag">acronym</span>, <span class="selector-tag">address</span>, <span class="selector-tag">big</span>, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">del</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">font</span>, <span class="selector-tag">img</span>, <span class="selector-tag">ins</span>, <span class="selector-tag">kbd</span>, <span class="selector-tag">q</span>, <span class="selector-tag">s</span>, <span class="selector-tag">samp</span>,</span><br><span class="line"><span class="selector-tag">small</span>, <span class="selector-tag">strike</span>, <span class="selector-tag">strong</span>, <span class="selector-tag">sub</span>, <span class="selector-tag">sup</span>, <span class="selector-tag">tt</span>, <span class="selector-tag">var</span>,</span><br><span class="line"><span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">fieldset</span>, <span class="selector-tag">form</span>, <span class="selector-tag">label</span>, <span class="selector-tag">legend</span>,</span><br><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">tbody</span>, <span class="selector-tag">tfoot</span>, <span class="selector-tag">thead</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">font-weight</span>: inherit;</span><br><span class="line"><span class="attribute">font-style</span>: inherit;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">font-family</span>: inherit;</span><br><span class="line"><span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* remember to define focus styles! */</span></span><br><span class="line"><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line"><span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">color</span>: black;</span><br><span class="line"><span class="attribute">background</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ol</span>, <span class="selector-tag">ul</span> &#123;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* tables still need &#x27;cellspacing=&quot;0&quot;&#x27; in the markup */</span></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line"><span class="attribute">border-collapse</span>: separate;</span><br><span class="line"><span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">caption</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line"><span class="attribute">text-align</span>: left;</span><br><span class="line"><span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">blockquote</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-tag">q</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span>, <span class="selector-tag">q</span> &#123;</span><br><span class="line"><span class="attribute">quotes</span>: <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>做法是把所有瀏覽器最不一致的地方強制歸 0，可以看到最一開始那一大串 html tag 的 margin、padding、border、outline 全都設為 0</p><p>優點是統整、重置了各個瀏覽器的樣式設定。<br>缺點是必須全部重新做設定，比較沒有彈性，而且在使用開發者工具時會看到一大坨的繼承鏈(inheritance chain)。</p><h2 id="CSS-Normalize"><a href="#CSS-Normalize" class="headerlink" title="CSS Normalize"></a>CSS Normalize</h2><p>因為 reset.css 重置了各個瀏覽器的樣式設定，使得有些有用、常用標籤的默認樣式必須要重新設定，因為這個問題，有人開發出了 normalize.css，典型的 Bootstrap 就是使用這款 CSS Reset。</p><p>保留有用的瀏覽器默認設置，而不是將其刪除。<br>為廣泛的 HTML 元素提供一般化的樣式。<br>修正瀏覽器的 Bug 與不一致。<br>透過微妙的改善提高可用性。<br>有詳細的文檔來解釋代碼。(每個樣式都有註解是處理什麼問題。)<br>最大的特色就是保留原本預設 HTML 標籤的樣式，僅針對不同瀏覽器與各版本間不相容的標籤進行些微調整。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在2020年的1月入伍，在入伍的期間也開始為自己的未來做打算，在之前也是上六角學院的課程，&lt;br&gt;也陸續買了很多相關課程，因為也不知道什麼時候進去蹲，自己的計畫一直沒有實現，在某一天晚&lt;br&gt;上手機看到通知點進去看，看到了這個之後~&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/DYJUGFA.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="六角切版直播班" scheme="http://cinglin570.github.io.com/categories/%E5%85%AD%E8%A7%92%E5%88%87%E7%89%88%E7%9B%B4%E6%92%AD%E7%8F%AD/"/>
    
    
    <category term="html css" scheme="http://cinglin570.github.io.com/tags/html-css/"/>
    
  </entry>
  
  <entry>
    <title>CSS 選擇器中大於符號是什麼意思?</title>
    <link href="http://cinglin570.github.io.com/2021/02/14/CSS%E9%81%B8%E6%93%87%E5%99%A8%E4%B8%AD%E7%9A%84%E5%A4%A7%E6%96%BC%E6%98%AF%E4%BB%80%E9%BA%BC%E6%84%8F%E6%80%9D/"/>
    <id>http://cinglin570.github.io.com/2021/02/14/CSS%E9%81%B8%E6%93%87%E5%99%A8%E4%B8%AD%E7%9A%84%E5%A4%A7%E6%96%BC%E6%98%AF%E4%BB%80%E9%BA%BC%E6%84%8F%E6%80%9D/</id>
    <published>2021-02-14T09:23:55.000Z</published>
    <updated>2021-02-14T09:41:27.956Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS大於符號"><a href="#CSS大於符號" class="headerlink" title="CSS大於符號"></a>CSS大於符號</h1><p>CSS選擇器中的大於（&gt;）是什麼意思？<br>在編輯網頁CSS的時候，有時候我們會看到大於（&gt;）的符號，究竟這個符號代表什麼意思呢？</p><p>這個符號其實相當容易理解，你可以把它想成直接的小孩(direct descendant/child)，而平常比較容易看到的空格（space）則是所有小孩的意思。</p><p>這是什麼意思呢？讓我們看個範例比較容易理解。</p><a id="more"></a><p>假設我先寫一個html文件，如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>This is the first child<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is the second child<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is the third child<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下來，我們分別套用不同的CSS來看看會有什麼不同的效果。</p><iframe height="265" style="width: 100%;" scrolling="no" title="LYbxMVy" src="https://codepen.io/pvzfeusk/embed/LYbxMVy?height=265&theme-id=dark&default-tab=html,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/pvzfeusk/pen/LYbxMVy'>LYbxMVy</a> by 胡謦麟  (<a href='https://codepen.io/pvzfeusk'>@pvzfeusk</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><p>因為大於（&gt;）只會影響到直接的小孩，所以在container之後，直接碰到p的只有third，所以結果就是只有third的字體會變大。</p><p>接下來，我們試試看常用的「空格（space）」，我把css改成：</p><iframe height="265" style="width: 100%;" scrolling="no" title="CSS 大於符號" src="https://codepen.io/pvzfeusk/embed/bGBgOEz?height=265&theme-id=dark&default-tab=html,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/pvzfeusk/pen/bGBgOEz'>CSS 大於符號</a> by 胡謦麟  (<a href='https://codepen.io/pvzfeusk'>@pvzfeusk</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><p>因為沒有指定要直接的小孩，所以只要是container裡面，所有p的標籤的字體都會變大，結果如下：</p><p>最後，如果我在css的地方只選擇container呢，像這樣的話：</p><iframe height="265" style="width: 100%;" scrolling="no" title="CSS 類別選擇器" src="https://codepen.io/pvzfeusk/embed/qBqRLZm?height=265&theme-id=dark&default-tab=html,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/pvzfeusk/pen/qBqRLZm'>CSS 類別選擇器</a> by 胡謦麟  (<a href='https://codepen.io/pvzfeusk'>@pvzfeusk</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><p>希望這樣的說明，能夠幫助大家更瞭解css中大於這個符號的意思。</p><p>CSS-Tricks的這一張圖清楚的說明了&gt;和空格的差異：</p><p><img src="https://i.imgur.com/935Lbrj.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CSS大於符號&quot;&gt;&lt;a href=&quot;#CSS大於符號&quot; class=&quot;headerlink&quot; title=&quot;CSS大於符號&quot;&gt;&lt;/a&gt;CSS大於符號&lt;/h1&gt;&lt;p&gt;CSS選擇器中的大於（&amp;gt;）是什麼意思？&lt;br&gt;在編輯網頁CSS的時候，有時候我們會看到大於（&amp;gt;）的符號，究竟這個符號代表什麼意思呢？&lt;/p&gt;
&lt;p&gt;這個符號其實相當容易理解，你可以把它想成直接的小孩(direct descendant/child)，而平常比較容易看到的空格（space）則是所有小孩的意思。&lt;/p&gt;
&lt;p&gt;這是什麼意思呢？讓我們看個範例比較容易理解。&lt;/p&gt;</summary>
    
    
    
    <category term="css" scheme="http://cinglin570.github.io.com/categories/css/"/>
    
    
    <category term="css" scheme="http://cinglin570.github.io.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS 選擇器中加號(+)和波浪號(~)</title>
    <link href="http://cinglin570.github.io.com/2021/02/14/CSS%20%E9%81%B8%E6%93%87%E5%99%A8%E4%B8%AD%E5%8A%A0%E8%99%9F%EF%BC%88+%EF%BC%89%E5%92%8C%E5%8F%96%E4%BB%A3%E7%AC%A6%E8%99%9F%EF%BC%8F%E6%B3%A2%E6%B5%AA%E8%99%9F%EF%BC%88~%EF%BC%89%E7%9A%84%E6%84%8F%E6%80%9D/"/>
    <id>http://cinglin570.github.io.com/2021/02/14/CSS%20%E9%81%B8%E6%93%87%E5%99%A8%E4%B8%AD%E5%8A%A0%E8%99%9F%EF%BC%88+%EF%BC%89%E5%92%8C%E5%8F%96%E4%BB%A3%E7%AC%A6%E8%99%9F%EF%BC%8F%E6%B3%A2%E6%B5%AA%E8%99%9F%EF%BC%88~%EF%BC%89%E7%9A%84%E6%84%8F%E6%80%9D/</id>
    <published>2021-02-14T03:05:53.000Z</published>
    <updated>2021-02-14T09:44:32.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS中的加號"><a href="#CSS中的加號" class="headerlink" title="CSS中的加號(+)"></a>CSS中的加號(+)</h1><p>讓我們先來看一下加號，加號影響的是同一階層（siblings）的標籤，例如，div + p指的是直接影響到div後的p，而div和p是屬於同一層的<br>為了方便大家理解，我們直接來看一下範例吧！</p><a id="more"></a><p>我們的html結構長這樣：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>One<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Six<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Seven<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接著，我在STYLE的地方，加入如下的CSS:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> + <span class="selector-tag">p</span>&#123;</span><br><span class="line">            <span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>這時候有哪些字體會變大呢？結果如下：<br>我們可以看到Three和Six都變大了，之所以Three和Six會變大，是因為CSS是選擇div + p，所以所有在同一階層（siblings）的情況下，如果是div接著碰到的p，都會受到影響。</p><iframe height="265" style="width: 100%;" scrolling="no" title="CSS中的加號(+)" src="https://codepen.io/pvzfeusk/embed/OJbWogd?height=265&theme-id=dark&default-tab=html,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/pvzfeusk/pen/OJbWogd'>CSS中的加號(+)</a> by 胡謦麟  (<a href='https://codepen.io/pvzfeusk'>@pvzfeusk</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><h1 id="CSS中的取代符號"><a href="#CSS中的取代符號" class="headerlink" title="CSS中的取代符號(~)"></a>CSS中的取代符號(~)</h1><p>那麼取代符號（~）呢？（註：我查了一下google才知道這個符號叫做取代符號）。</p><p>取代符號其實和加號用法很類似，只是加號只會影響到下一個同階層的元素，但是取代符合則是影響到下一個同階層的所有元素。用中文說實在非常難解釋…，還是讓我們看一下例子。</p><p>我們用一樣的HTML結構，只是現在把CSS換成如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> ~ <span class="selector-tag">p</span>&#123;</span><br><span class="line">            <span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>這時候的結果會長這樣子：</p><iframe height="265" style="width: 100%;" scrolling="no" title="CSS中的取代符號(~)" src="https://codepen.io/pvzfeusk/embed/PobWdJV?height=265&theme-id=dark&default-tab=html,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/pvzfeusk/pen/PobWdJV'>CSS中的取代符號(~)</a> by 胡謦麟  (<a href='https://codepen.io/pvzfeusk'>@pvzfeusk</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><p>這時候連Seven也跟著變大了，Seven之以跟著變大是因為seven同樣是在div之後的p（碰到的第二個p），在上面加號的例子中，div + p只會影響到div之後的第一個p，不會影響到後續的p，但如果使用的是div~p，則div後面的p都能夠有影響。</p><p>總結來說，<br>p+p：同一層中，p後面的第一個p；<br>p~p：同一層中，p後面的所有p。</p><p>參考: <a href="https://pjchender.blogspot.com/2015/07/css_25.html">CSS 選擇器中加號（+）和取代符號／波浪號（~）的意思</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CSS中的加號&quot;&gt;&lt;a href=&quot;#CSS中的加號&quot; class=&quot;headerlink&quot; title=&quot;CSS中的加號(+)&quot;&gt;&lt;/a&gt;CSS中的加號(+)&lt;/h1&gt;&lt;p&gt;讓我們先來看一下加號，加號影響的是同一階層（siblings）的標籤，例如，div + p指的是直接影響到div後的p，而div和p是屬於同一層的&lt;br&gt;為了方便大家理解，我們直接來看一下範例吧！&lt;/p&gt;</summary>
    
    
    
    <category term="css" scheme="http://cinglin570.github.io.com/categories/css/"/>
    
    
    <category term="css" scheme="http://cinglin570.github.io.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Vue Cli</title>
    <link href="http://cinglin570.github.io.com/2020/11/04/hello-world/"/>
    <id>http://cinglin570.github.io.com/2020/11/04/hello-world/</id>
    <published>2020-11-04T12:35:53.000Z</published>
    <updated>2020-11-06T02:57:44.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-Cli"><a href="#Vue-Cli" class="headerlink" title="Vue Cli"></a>Vue Cli</h1><p>圖一<br><img src="https://i.imgur.com/aNwSDtY.png"></p><a id="more"></a><p>圖二<br><img src="https://i.imgur.com/2M2CLCy.png"></p><p>我們在開發的過程中，會使用很多的檔案，例如jpg、png檔案等等，我們也可能有撰寫javaScript程式碼，使用到ES6的語法，在比較舊的瀏覽器就沒辦法運行，我們也可能會撰寫sass或是scss這種預處理器，還有.vue的檔案，.vue的檔案簡單來說一個檔案就是一個元件，這個元件包含了html、js、css，把這三個都結合在一起在開發上也比較容易。<br>(圖二)左邊是我們撰寫的檔案，右邊則是輸出的可以運行的檔案，因為我們沒辦法直接讀取像是sass、scss、.vue，所以會建立一個main.js，把所有檔案都進行關聯，除此之外還會建立一個loader，它會把所有檔案都載進來，最後還有一個output輸出檔案的位子，Webpack要做的事情就是，把這些loader跟main.js產生關聯性，再藉由Webpack編譯，雖然左邊的檔案沒辦法直接運行它，但是進行編譯之後呢，輸出之後就是瀏覽器可以運行的版本。<br>圖三<br><img src="https://i.imgur.com/3YbT69U.png"></p><p>簡單來說，Webpack就是把我們開發中使用的工具和套件全部整合在一起，並且使用npm的方式來運行。</p><p><img src="https://i.imgur.com/Hwd3OXK.png"></p><h2 id="SPA"><a href="#SPA" class="headerlink" title="SPA"></a>SPA</h2><p>簡單來說就是由前端模擬的路由，那麼(路由)我們可以想像成一個網址，目前我們看到的網頁都是由後端決定的路由，SPA呢就是由前端所決定的路由，會在/後面加上#字號，#字號後面的user，就是我們實際運行的網址，實際上呢也只會切換#字號後面的網址，頁面也會跟著做更換；通常後端決定的路由在網頁切換的時候會有一個閃爍的感覺，如果使用前端決定的路由，更能提升使用者體驗<br><img src="https://i.imgur.com/0I2f0yJ.png"></p><p><img src="https://i.imgur.com/G7i5GJK.png"></p><h2 id="安裝-Node-js"><a href="#安裝-Node-js" class="headerlink" title="安裝 Node.js"></a>安裝 Node.js</h2><p>目前有許多前端開發環境都是基於 Node.js，如 Gulp、Webpack、Parcel…，或是任何主流框架（Vue、React、Angular）的 CLI 也都是基於此服務。本次要介紹的 Vue Cli 自然也不例外。</p><p>進入官網安裝 <a href="https://nodejs.org/en/">Node.js</a>，請打開終端機或命令提示字元，輸入 <code>node -v</code> 後按 Enter，看是否有顯示版本號。</p><p><img src="https://i.imgur.com/tMn6b6n.gif"></p><blockquote><p>Mac 請按 command+空白鍵，輸入「terminal」打開終端機<br>Win 請按 開始 &gt; 執行 &gt; 輸入「cmd」打開命令提示字元<br>Win10 執行視窗快速鍵為 win + R:</p></blockquote><p><img src="https://i.imgur.com/xM3UOZG.jpg"></p><p><img src="https://i.imgur.com/fEKbeaR.png"></p><p>在版本號較新的 Win10 也可在左下搜尋欄輸入 cmd 打開命令提示字元:</p><p><img src="https://i.imgur.com/UsXljox.jpg"></p><p>請確保 Node.js 在第 9 版以上（官方建議：<code>8.11.0+</code>）。</p><h2 id="Vue-CLI-安裝"><a href="#Vue-CLI-安裝" class="headerlink" title="Vue CLI 安裝"></a>Vue CLI 安裝</h2><p><img src="https://i.imgur.com/6uhIFx9.png"><br><code>npm install -g @vue/cli</code> 是使用全域的環境建立vue。</p><p><img src="https://i.imgur.com/yMyJDBy.png"><br>到了這裡基本上Vue CLI就已經下載完成，Vue CLI的運行方式有兩種，第一種是使用指令的方式終端機(terminal)，另一種是使用vue ui的方式，在這裡我們使用ui的方式來運行。</p><p><img src="https://i.imgur.com/govrlEi.png"></p><p>第一次開發的話進來基本上不會有內容，再來點擊新增</p><p><img src="https://i.imgur.com/qcddG6a.png"></p><p><img src="https://i.imgur.com/WuZKKWy.png"></p><p><img src="https://i.imgur.com/EFgn5e4.png"></p><p><img src="https://i.imgur.com/W2SUt8U.png"><br>這邊是課程建議開啟的功能:</p><p>Babel:在撰寫js的時候很常使用ES6的語法，為了確保這些語法在所有的瀏覽器能夠正確運行。</p><p>TypeScript: js的預處理器。</p><p>Router:建議直接在Vue CLI的部分直接啟用，在之後使用上也比較方便，會直接給一個初始的loader環境，以後實作就不用手動開啟。</p><p>Vuex:資料狀態管理的工具</p><p>CSS Pre-processors:CSS的預處理器。</p><p>Linter/Formatter:檢查程式碼有沒有排整齊，建議開啟。</p><p>最後面兩個是測試工具</p><p><img src="https://i.imgur.com/h6IsXJ9.png"></p><p>History Mode 切記不要開啟，當開啟之後呢，私服器必須做額外的設定才能運行(開了老師不會幫我們改作業)。<br><img src="https://i.imgur.com/TBBnPmj.png"><br>直接新增不儲存</p><p><img src="https://i.imgur.com/ry3yPxI.png"><br>開發使用的話大多使用前兩個</p><p><img src="https://i.imgur.com/yw5EEs9.png"><br>node_modules:這是我們所安裝的套件包含sass(scss)、.vue檔案這些功能都是安裝在這裡</p><p>public:這個資料夾是公開的資料夾，這個資料夾的內容都不會被編譯，像是.png、.jpg的檔案就很適合放在這裡面</p><p><img src="https://i.imgur.com/HBll11c.png"><br>雖然不會被編譯，但index.html呢實際上編譯的時候，會做一些些調整，像我們編譯完會進行一些插入，css、js就會插入到html裡面</p><p><img src="https://i.imgur.com/Vj11447.png"><br>再來我們還會有更目錄下的檔案，就是我們運行的環境</p><p>package.json:安裝套件所記錄的檔案</p><h2 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h2><p><img src="https://i.imgur.com/5k2b0gV.png"></p><p>主要是放在src的資料夾裡，main.js是我們的主要檔案，所有的檔案都會跟它產生關聯</p><p><img src="https://i.imgur.com/Wyybx6I.png"></p><p><img src="https://i.imgur.com/M42gXXc.png"></p><p>會看到vue、App.vue和router與main.js產生關聯，而router裡有Home跟About的頁面產生關聯。<br><img src="https://i.imgur.com/h1nKHlZ.png"><br>Home.vue跟About.vue都是一個完整的頁面<br><img src="https://i.imgur.com/zwu1aGG.png"><br>再來說說component資料夾，這是在我們主頁面下的小元件，像是這些就能掛載到Home.vue和About.vue頁面上，再由路由載進來，最後掛載到main.js上。</p><p>如果我們要撰寫js、css(sass)的話我們會寫在assets的資料夾內。</p><p>最後透過編譯，會編譯成輸出的檔案例如:public資料夾裡的index.html，使用ui裡的build建立dist檔案，注意這裡dist檔案無法直接開啟，必須使用webServer開啟。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Vue-Cli&quot;&gt;&lt;a href=&quot;#Vue-Cli&quot; class=&quot;headerlink&quot; title=&quot;Vue Cli&quot;&gt;&lt;/a&gt;Vue Cli&lt;/h1&gt;&lt;p&gt;圖一&lt;br&gt;&lt;img src=&quot;https://i.imgur.com/aNwSDtY.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Vue" scheme="http://cinglin570.github.io.com/categories/Vue/"/>
    
    
    <category term="Vue.js" scheme="http://cinglin570.github.io.com/tags/Vue-js/"/>
    
  </entry>
  
</feed>
